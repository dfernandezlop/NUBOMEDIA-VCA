{
    "remoteClasses": [
	{
	    "name": "NuboNoseDetector",
	    "extends": "Filter",
	    "doc": "NuboNoseDetector interface. Documentation about the module",
	    "constructor": {
		"doc": "Create an element",
		"params": [
		    {
			"name": "mediaPipeline",
			"doc": "the parent :rom:cls:`MediaPipeline`",
			"type": "MediaPipeline",
			"final": true
		    }
		]
	    },
	    "methods": [
		{
		    "name": "showNoses",
		    "doc" : "Show or Hide the noses in the video stream",
		    "params": [
			{
			    "name": "viewNoses",
			    "doc": "Determines wheter the detected noses will be displayed or not",
			    "type": "int"
			}
		    ]
		},
		{
		    "name": "detectByEvent",
		    "doc" : "To indicate  the algorithm if process all the images or only when it receives an event",
		    "params": [
			{
			    "name": "event",
			    "doc": "0 (default) => process all the frames without constraints; 1 => process only when we receive a specific event such as face detection",
			    "type": "int"
			}	  
     		    ]
		},
		{
		    "name": "sendMetaData",
		    "doc" : "The noses  detected (x,y,width,height) are sent as metadata ",
		    "params": [
			{
			    "name": "metaData",
			    "doc": "0 (default) => metadata are not sent; 1 => metadata are sent",
			    "type": "int"
			}	  
     		    ]
		},
		{
		    "name": "multiScaleFactor",
		    "doc": "Specify how much the image size is reduced at each haar image ",
		    "params": [
			{
			    "name":"scaleFactor", 
			    "doc":"5-50 (25 default)",
			    "type": "int"
			}
		    ]
		},
		{
		    "name": "processXevery4Frames",
		    "doc": "process x every 4 frames",
		    "params": [
			{
			    "name":"xper4", 
			    "doc":"1,2,3,4 (default) => process x frames every 4 frames",
			    "type": "int"
			}
		    ]
		},
		{
		    "name": "widthToProcess",
		    "doc": "this will be the width of the image that the algorithm is going to process to detect noses",
		    "params": [
			{
			    "name":"width", 
			    "doc":"160,320 (default),480,640",
			    "type": "int"
			}
		    ]
		},
		{
		    "name": "activateServerEvents",
		    "doc": "The events will be launched to the server with the information about the nose detected.  milliseconds indicate the frequency with which events will be launched (0 millisecons => an event will be lauched, when there is some information",
		    "params": [
			{
			    "name":"activate", 
			    "doc":"1=>activate it, 0 desactivated",
			    "type": "int"
			},
			{
			    "name":"time", 
			    "doc":"the frequency in ms to send the events",
			    "type": "int"
			}
		    ]
        },
        {
          "name": "unsetOverlayedImage",
          "doc": "Clear the image to be shown over each detected nose. Stops overlaying the noses.",
          "params": []
        },
        {
          "name": "setOverlayedImage",
          "doc": "Sets the image to use as overlay on the detected noses.",
          "params": [
            {
              "name": "uri",
              "doc": "URI where the image is located",
              "type": "String"
            },
            {
              "name": "offsetXPercent",
              "doc": "the offset applied to the image, from the X coordinate of the detected nose upper right corner. A positive value indicates right displacement, while a negative value moves the overlaid image to the left. This offset is specified as a percentage of the nose width.\n\nFor example, to cover the detected nose with the overlaid image, the parameter has to be ``0.0``. Values of ``1.0`` or ``-1.0`` indicate that the image upper right corner will be at the nose´s X coord, +- the nose´s width.\n\n.. note::\n\n    The parameter name is misleading, the value is not a percent but a ratio",
              "type": "float"
            },
            {
              "name": "offsetYPercent",
              "doc": "the offset applied to the image, from the Y coordinate of the detected nose upper right corner. A positive value indicates up displacement, while a negative value moves the overlaid image down. This offset is specified as a percentage of the nose width.\n\nFor example, to cover the detected nose with the overlaid image, the parameter has to be ``0.0``. Values of ``1.0`` or ``-1.0`` indicate that the image upper right corner will be at the nose´s Y coord, +- the nose´s width.\n\n.. note::\n\n    The parameter name is misleading, the value is not a percent but a ratio",
              "type": "float"
            },
            {
              "name": "widthPercent",
              "doc": "proportional width of the overlaid image, relative to the width of the detected nose. A value of 1.0 implies that the overlaid image will have the same width as the detected nose. Values greater than 1.0 are allowed, while negative values are forbidden.\n\n.. note::\n\n    The parameter name is misleading, the value is not a percent but a ratio",
              "type": "float"
            },
            {
              "name": "heightPercent",
              "doc": "proportional height of the overlaid image, relative to the height of the detected nose. A value of 1.0 implies that the overlaid image will have the same height as the detected nose. Values greater than 1.0 are allowed, while negative values are forbidden.\n\n.. note::\n\n    The parameter name is misleading, the value is not a percent but a ratio",
              "type": "float"
            }
          ]
        }
	    ],	
	    "events": [
		"OnNose"
	    ]   
	}
    ],

    "events": [
	{
	    "name": "OnNose",
	    "extends": "Media",
	    "doc": "Notify information about the nose detectected",
	    "properties": [
		{
		    "name": "info",
		    "doc": "Information abut the detected noses",
		    "type": "NoseInfo[]"
		}
	    ]
	}
    ],
    "complexTypes": [
	{
	    "typeFormat": "REGISTER",
	    "name": "NoseInfo",
	    "doc": "NoseInfo contains information about the detected noses",
	    "properties": [
		{
		    "name": "name",
		    "doc": "This value contains the word nose in order to identify the register",
		    "type": "String"
		},
		{
		    "name": "x", 
		    "doc": "represent the x value of the upper left corner of the nose ",
		    "type": "int"
		},
		{
		    "name": "y", 
		    "doc": "represent the y value of the upper left corner of the nose ",
		    "type": "int"
		},
		{
		    "name": "height",
		    "doc": "Represent the height of the detected nose",
		    "type": "int"
		},
		{
		    "name": "width",
		    "doc": "Represent the width of the detected nose",
		    "type": "int"
		}
	    ]
	}
    ]
}
